{
  "name": "animation",
  "description": "animation timing & handling",
  "version": "0.1.3",
  "homepage": "https://github.com/dodo/node-animation",
  "author": {
    "name": "dodo",
    "url": "https://github.com/dodo"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dodo/node-animation.git"
  },
  "main": "animation.js",
  "engines": {
    "node": ">= 0.4.x"
  },
  "keywords": [
    "request",
    "animation",
    "frame",
    "interval",
    "node",
    "browser"
  ],
  "scripts": {
    "prepublish": "cake build"
  },
  "dependencies": {
    "ms": ">= 0.1.0",
    "request-animation-frame": ">= 0.1.0"
  },
  "devDependencies": {
    "muffin": ">= 0.2.6",
    "browserify": "1.6.1",
    "scopify": ">= 0.1.0",
    "coffee-script": ">= 1.1.2"
  },
  "readme": "# [animation](https://github.com/dodo/node-animation/)\n\nHandles Animation Timing and Handling for you.\n\nUses requesAnimationFrame when running on browser side.\n\n## Installation\n\n```bash\n$ npm install animation\n```\n\n## Usage\n\n```javascript\n// get a tick every 100ms\nvar animation = new Animation({frame:'100ms'});\nanimation.on('tick', function (dt) { … });\nanimation.start();\n```\n\n```javascript\n// get next tick with delta time to last tick\nvar animation = new Animation({frame:'100ms'});\nvar animate = function (dt) {\n\n    // do your animation stuff\n\n    if (process.stdout.write(data)) {\n        animation.nextTick(animate);\n    } else {\n        var t = new Date().getTime()\n        process.stdout.once('drain', function () {\n            var now = new Date().getTime();\n            animate(now - t + dt);\n        });\n    }\n};\nanimation.nextTick(animate); // no start required\n```\n\n```javascript\n// doesnt really matter when its executed, but it should happen\n// (use this in browser if you want to update your dom on requesAnimationFrame)\nvar animation = new Animation();\nanimation.start();\nanimation.push(function (dt) {\n    // happens (once) on the next few ticks,\n    // depending on how much tasks are allready pushed\n});\n```\n\n[Δt](http://dodo.github.com/node-dynamictemplate/) adapters for [DOM](http://dodo.github.com/node-dt-dom/) and [jQuery](http://dodo.github.com/node-dt-dom/) depending on this module to do heavy DOM manipulation like insertion only on requesAnimationFrame.\n\n[surrender-cube](https://github.com/dodo/node-surrender-cube/blob/master/src/index.coffee) uses this module to draw a rotating wireframe cube in terminal.\n\n[ceilingled](https://github.com/c3d2/ceilingled) uses this to draw images fetched from superfeedr to draw either on SDL or on a LED wall.\n\n## Animation\n\n```javascript\nanimation = new Animation({\n    // defaults\n    timeoutexecution:'20ms', // allowed execution time per animation tick timeout\n    execution: '5ms', // allowed execution time per animation tick\n    timeout:   null,  // maximum time of a animation tick interval else runs continuously if null\n    toggle:    false, // if true animation pauses and resumes itself when render queue gets empty or filled\n    frame:     '16ms' // time per frame\n});\n```\n\nCreates a new Animation controller.\n\n### animation.start\n\n```javascript\nanimation.start();\n```\n\nStarts animation.\n\n### animation.stop\n\n```javascript\nanimation.stop();\n```\n\nStops animation.\n\n### animation.pause\n\n```javascript\nanimation.pause();\n```\nWhen autotoggle is enabled the Animation pauses itself if the render queue is empty.\n\n### animation.resume\n\n```javascript\nanimation.resume();\n```\n\nWhen autotoggle is enabled the Animation resumes itself when the render queue gets filled again after it was emtpy.\n\n### animation.nextTick\n\n```javascript\nanimation.nextTick(function (dt) { … });\n```\n\nGiven callback gets called on next animation tick when running and not paused.\n\n## Events\n\n### 'start'\n\n```javascript\nanimation.on('start', function () { … });\n```\n\nEmits `start` event every time the animation gets started.\n\n### 'stop'\n\n```javascript\nanimation.on('stop', function () { … });\n```\n\nEmits `stop` event every time the animation gets stopped.\n\n### 'pause'\n\n```javascript\nanimation.on('pause', function () { … });\n```\n\nEmits `pause` event every time the animation gets paused.\n\n### 'resume'\n\n```javascript\nanimation.on('resume', function () { … });\n```\n\nEmits `resume` event every time the animation gets resumed.\n\n### 'tick'\n\n```javascript\nanimation.on('tick', function (dt) { … });\n```\n\nEmits `tick` event every time the animation executes a animation tick.\n\n`dt` is the time since last animation tick finished.\n\nUse this to do your animation stuff.\n\n\n\n\n\n",
  "_id": "animation@0.1.3",
  "_from": "animation@>= 0.1.3"
}
