{
  "name": "dynamictemplate",
  "description": "Δt - async & dynamic templating engine",
  "version": "0.5.6",
  "homepage": "https://github.com/dodo/node-dynamictemplate",
  "author": {
    "name": "dodo",
    "url": "https://github.com/dodo"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dodo/node-dynamictemplate.git"
  },
  "main": "dynamictemplate.js",
  "engines": {
    "node": ">= 0.4.x"
  },
  "keywords": [
    "dt",
    "async",
    "dynamic",
    "event",
    "template",
    "generation",
    "stream",
    "browser"
  ],
  "scripts": {
    "test": "cake build && nodeunit test",
    "prepublish": "cake build"
  },
  "dependencies": {
    "bufferstream": ">= 0.5.1",
    "dt-stream": ">= 0.1.2",
    "asyncxml": ">= 0.4.5"
  },
  "devDependencies": {
    "browserify": "1.6.1",
    "scopify": ">= 0.2.1",
    "coffee-script": ">= 1.1.3",
    "muffin": ">= 0.2.6",
    "nodeunit": ">= 0.5.4"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/dodo/node-dynamictemplate/raw/master/LICENSE"
    }
  ],
  "readme": "# ![Δt](https://s3.amazonaws.com/cloud.ohloh.net/attachments/49947/%CE%94t_med.png)[dynamictemplate](http://dodo.github.com/node-dynamictemplate/)\n\n\n\n[dynamictemplate](http://dodo.github.com/node-dynamictemplate/) is yet\nanother template engine, but this time loaded with full async support\nand capable of being changed even after the template was rendered.\n\nIt works in browsers too.\n\n→ [Check out the demo!](http://dodo.github.com/node-dynamictemplate/example/circles.html)\n\n## Installation\n\n```bash\n$ npm install dynamictemplate\n```\n\n## Documentation\n\n\n\nwhat are the specialities/features of dt?\n\n- async & dynamic → changeable even after tpl was rendered\n- pure javascipt with a hugh eventbased api → modular & extendable\n- runs on server and browser ()\n- different approach than dom: dont get your elements out of the black box. keep only those which you need.\n- minimalistic (all the other stuff is hidden in modules :P)\n    - jquery or dom api\n    - designer integration (compiles html to a mask which can be applied on a simplified version of the tpl)\n\n- flow control is important again\n- because of its async nature it doesnt struggle with creating tags even after rendering was finished. (which is why i called it 'dynamic')\n\n\n\n\n\n\n\nthis file\n\nis only a convenient helper for asyncxml to create tags easily\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Writing templates\n\n```coffeescript\ntpl = new Template schema:'xml', doctype:off, pretty:off, encoding:'utf-8', end:on, -> # default settings\n    @$tag 'xml', ->\n        @$tag 'child', \"content\"\n```\n\nThis actually allows you to write real templates with [asyncxml](https://github.com/dodo/node-asyncxml).\nNormally, asyncxml just gives you the ability to write asynchronous XML-generating code.\n\n### How to write tags\n\nMaybe the main difference to some other template engines is that all the tags are asynchronous.\nThis has the side effect that every tag has to be closed manually. As this can get a little bit anoying when you write very large templates, I added a little shortcut which invokes the end for you at the and of the child scope:\n\n```coffeescript\n@html ->\n    @body(\"content\").end()\n    @end()\n\n# is the exactly same as\n\n@$html ->\n    @$body \"content\"\n```\n\nJust add a dollar sign (`$`) in front of the tag method and it acts a little bit more synchronous again.\n\n### Plugins\n\n * [Δt compiler](https://github.com/dodo/node-dt-compiler) - this compiles static HTML to template masks.\n * [Δt stream adapter](https://github.com/dodo/node-dt-stream) - this lets you use node's beloved Stream to get static HTML from the templates.\n * [Δt jquery adapter](https://github.com/dodo/node-dt-jquery) - this lets you insert the template into dom with the help of [jQuery](http://jquery.com/).\n * [Δt list](https://github.com/dodo/node-dt-list) - this gives all you need to handle an ordered list of tags.\n\n### The dynamic part\n\n    TODO i couldnt find the time to build an example\n    that's works best with dynamictemplate, so please stand by.\n\n\n#### Just FYI\n\nThis is not finished yet.\nBut please, make yourself comfortable, take a cookie and **start contributing**!\n\n\n## Example\n\nIf you are familiar with [coffeekup](http://coffeekup.org), you should recognize this:\n\n```coffeescript\nstringify = (func) -> func.toString()\nshoutify = (s) -> s.toUpperCase() + \"!\"\ntemplate = ({title, desc, path, user, max}) ->\n    new Template schema:5, doctype:on, ->\n        @$html ->\n            @$head ->\n                @$meta charset:'utf-8'\n                @$title \"#{title or 'Untitled'} | My awesome website\"\n                if desc?\n                    @$meta name:'description', content:desc\n                @$link rel:'stylesheet', href:'/stylesheets/app.css'\n                @$script src:'/javascripts/jquery.js'\n                @$script stringify -> # browser code\n                    $ ->\n                        alert \"Alerts are so annoying...\"\n        @$body ->\n            @$header ->\n                @$h1 title or 'Untitled'\n                @$nav ->\n                    @$ul ->\n                        unless path is '/'\n                            @$li -> @$a href:'/', \"Home\"\n                        @$li -> @$a href:'/chunky', \"Bacon!\"\n                        switch user.role\n                            when 'owner', 'admin'\n                                @$li -> @$a href:'/admin', \"Secret Stuff\"\n                            when 'vip'\n                                @$li -> @$a href:'/vip', \"Exclusive Stuff\"\n                            else\n                                @$li -> @$a href:'/commoners', \"Just Stuff\"\n            @$section ->\n                @$h2 \"Let's count to #{max}:\"\n                @$p \"#{i}\" for i in [1..max]\n            @$footer ->\n                @$p shoutify \"bye\"\n```\n\n[![Build Status](https://secure.travis-ci.org/dodo/node-dynamictemplate.png)](http://travis-ci.org/dodo/node-dynamictemplate)\n",
  "_id": "dynamictemplate@0.5.6",
  "_from": "dynamictemplate"
}
