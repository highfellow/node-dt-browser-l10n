(function() {
  var __slice = Array.prototype.slice;

  module.exports = {
    add: function(parent, el) {
      var $el, $par, $parpar, i, _ref, _ref2;
      $el = el._jquery;
      $par = parent._jquery;
      if (parent === parent.builder) {
        i = $par.length - 1;
        $par = $par.add($el);
        if (parent._browser.wrapped) {
          $par.first().replaceWith($el);
          if (parent.parent === ((_ref = parent.parent) != null ? _ref.builder : void 0)) {
            $parpar = (_ref2 = parent.parent) != null ? _ref2._jquery : void 0;
            parent._browser.wrapped = false;
            $par = $par.not(':first');
            if ($parpar != null) {
              $parpar.splice.apply($parpar, [$parpar.index($par), i + 1].concat(__slice.call($par)));
            }
          }
        } else if ($par.parent().length > 0) {
          $el.insertAfter($par[i]);
        }
      } else {
        $par.append($el);
      }
      return parent._jquery = $par;
    },
    replace: function(oldtag, newtag) {
      var $new, $old, $par, parent;
      parent = newtag.parent;
      $new = newtag._jquery;
      $old = oldtag._jquery;
      $par = parent._jquery;
      if (parent === parent.builder) {
        $par.splice.apply($par, [$par.index($old), $old.length].concat(__slice.call($new)));
      }
      if ($old.parent().length > 0) $old.replaceWith($new);
      return newtag._jquery = $new;
    },
    text: function(el, text) {
      return el._jquery.text(text);
    },
    raw: function(el, html) {
      return el._jquery.html(html);
    },
    attr: function(el, key, value) {
      if (value === void 0) {
        return el._jquery.removeAttr(key);
      } else {
        return el._jquery.attr(key, value);
      }
    },
    show: function(el) {
      return el._jquery.show();
    },
    hide: function(el) {
      return el._jquery.hide();
    },
    remove: function(el, opts) {
      if (opts.soft) {
        return el._jquery.detach();
      } else {
        return el._jquery.remove();
      }
    }
  };

}).call(this);
