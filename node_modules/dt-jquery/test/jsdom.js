(function() {
  var EventEmitter, HTML, Template, jQuery, jqueryify;

  EventEmitter = require('events').EventEmitter;

  jQuery = require('jquery');

  jqueryify = require('../dt-jquery');

  Template = require('dynamictemplate').Template;

  HTML = function($, el) {
    var $div;
    $div = $('<div>');
    $div.append(el.clone());
    return $div.html() || "<empty/>";
  };

  module.exports = {
    setUp: function(callback) {
      var _this = this;
      this.$ = jQuery.create();
      this.html = function(el) {
        return HTML(_this.$, el);
      };
      return callback();
    },
    normal: function(æ) {
      var done, tpl;
      var _this = this;
      tpl = jqueryify({
        $: this.$
      }, new Template({
        schema: 5
      }, function() {
        return this.$div({
          "class": 'content'
        }, function() {
          return this.$p("bla").ready(done);
        });
      }));
      return done = function() {
        æ.equal(_this.html(tpl.jquery), ['<div class="content">', "<p>bla</p>", "</div>"].join(""));
        return æ.done();
      };
    },
    add: {
      setUp: function(callback) {
        var _this = this;
        this.api = new EventEmitter;
        this.results = "no results";
        setTimeout(function() {
          _this.æ.equal(_this.html(_this.tpl.jquery), _this.results.join(""));
          return _this.æ.done();
        }, 100);
        return callback();
      },
      simple: function(æ) {
        var $, api, tpl;
        var _this = this;
        this.æ = æ;
        $ = this.$, api = this.api;
        tpl = this.tpl = jqueryify({
          $: $
        }, new Template({
          schema: 5
        }, function() {
          return api.on('view', this.$div({
            "class": 'content'
          }).add);
        }));
        setTimeout(function() {
          var t, _ref, _ref2, _ref3;
          api.emit('view', t = new Template({
            schema: 5
          }, function() {
            return this.$footer(function() {
              return this.$p("bar");
            });
          }));
          process.nextTick(function() {
            æ.equal(1, t.jquery.length);
            return æ.equal(0, t.jquery.filter('placeholder').length);
          });
          æ.equal("42" + (tpl === ((_ref = t.xml) != null ? (_ref2 = _ref.parent) != null ? (_ref3 = _ref2.builder) != null ? _ref3.template : void 0 : void 0 : void 0)), "42true");
          return t.ready(function() {
            return æ.equal(_this.html(t.jquery), ["<footer></footer>"].join(""));
          });
        }, 42);
        setTimeout(function() {
          var t, _ref, _ref2, _ref3;
          api.emit('view', t = new Template({
            schema: 5
          }, function() {
            return this.$span(function() {
              return this.$p("foo");
            });
          }));
          process.nextTick(function() {
            æ.equal(1, t.jquery.length);
            return æ.equal(0, t.jquery.filter('placeholder').length);
          });
          æ.equal("23" + (tpl === ((_ref = t.xml) != null ? (_ref2 = _ref.parent) != null ? (_ref3 = _ref2.builder) != null ? _ref3.template : void 0 : void 0 : void 0)), "23true");
          return t.ready(function() {
            return æ.equal(_this.html(t.jquery), ["<span></span>"].join(""));
          });
        }, 23);
        return this.results = ['<div class="content">', "<span><p>foo</p></span>", "<footer><p>bar</p></footer>", "</div>"];
      },
      'after end': function(æ) {
        var $, api, next_step, tpl;
        var _this = this;
        this.æ = æ;
        $ = this.$, api = this.api;
        tpl = this.tpl = jqueryify({
          $: $
        }, new Template({
          schema: 5
        }, function() {
          var content;
          content = this.$div({
            "class": 'content'
          });
          api.on('view', content.add);
          return content.ready(next_step);
        }));
        next_step = function() {
          return setTimeout(function() {
            var t, _ref, _ref2, _ref3;
            api.emit('view', t = new Template({
              schema: 5
            }, function() {
              return this.$span(function() {
                return this.$p("foo");
              });
            }));
            process.nextTick(function() {
              æ.equal(1, t.jquery.length);
              return æ.equal(0, t.jquery.filter('placeholder').length);
            });
            æ.equal("16" + (tpl === ((_ref = t.xml) != null ? (_ref2 = _ref.parent) != null ? (_ref3 = _ref2.builder) != null ? _ref3.template : void 0 : void 0 : void 0)), "16true");
            return t.ready(function() {
              return æ.equal(_this.html(t.jquery), ["<span></span>"].join(""));
            });
          }, 16);
        };
        return this.results = ['<div class="content">', "<span><p>foo</p></span>", "</div>"];
      },
      'after remove': function(æ) {
        var $, api, foo, tpl;
        var _this = this;
        this.æ = æ;
        $ = this.$, api = this.api;
        foo = null;
        tpl = this.tpl = jqueryify({
          $: $
        }, new Template({
          schema: 5
        }, function() {
          return this.$div({
            "class": 'content'
          }, function() {
            var bar;
            api.on('view', this.add);
            foo = this.$p("foo");
            return bar = this.$p("bar");
          });
        }));
        setTimeout(function() {
          var _ref;
          foo.remove({
            soft: true
          });
          api.emit('view', foo);
          process.nextTick(function() {
            æ.equal(1, foo._jquery.length);
            return æ.equal(0, foo._jquery.filter('placeholder').length);
          });
          æ.equal("37" + (tpl === ((_ref = foo.builder) != null ? _ref.template : void 0)), "37true");
          return foo.ready(function() {
            return æ.equal(_this.html(foo._jquery), ["<p>foo</p>"].join(""));
          });
        }, 37);
        return this.results = ['<div class="content">', "<p>bar</p>", "<p>foo</p>", "</div>"];
      },
      'template into template': function(æ) {
        var $, api, tpl;
        var _this = this;
        this.æ = æ;
        $ = this.$, api = this.api;
        tpl = this.tpl = jqueryify({
          $: $
        }, new Template({
          schema: 5
        }, function() {
          return api.on('view', this.add);
        }));
        setTimeout(function() {
          var t, _ref, _ref2, _ref3;
          api.emit('view', t = new Template({
            schema: 5
          }, function() {
            return this.$span(function() {
              return this.$p("foo");
            });
          }));
          process.nextTick(function() {
            æ.equal(1, t.jquery.length);
            return æ.equal(0, t.jquery.filter('placeholder').length);
          });
          æ.equal("9" + (tpl === ((_ref = t.xml) != null ? (_ref2 = _ref.parent) != null ? (_ref3 = _ref2.builder) != null ? _ref3.template : void 0 : void 0 : void 0)), "9true");
          return t.ready(function() {
            return æ.equal(_this.html(t.jquery), ["<span></span>"].join(""));
          });
        }, 9);
        return this.results = ["<span><p>foo</p></span>"];
      },
      'to second level': function(æ) {
        var $, adds, api, footer, tpl, _ref;
        var _this = this;
        this.æ = æ;
        $ = this.$, api = this.api;
        _ref = [
          null, {
            should: 0,
            real: 0
          }
        ], footer = _ref[0], adds = _ref[1];
        tpl = this.tpl = jqueryify({
          $: $
        }, new Template({
          schema: 5
        }, function() {
          api.on('view', this.$div({
            "class": 'content'
          }).add);
          return adds.should++;
        }));
        tpl.on('add', function() {
          return adds.real++;
        });
        setTimeout(function() {
          var t, _ref2, _ref3, _ref4;
          adds.should++;
          api.emit('view', footer = t = new Template({
            schema: 5
          }, function() {
            api.on('footer', this.$footer().add);
            return adds.should++;
          }));
          process.nextTick(function() {
            æ.equal(1, t.jquery.length);
            return æ.equal(0, t.jquery.filter('placeholder').length);
          });
          æ.equal("8" + (tpl === ((_ref2 = t.xml) != null ? (_ref3 = _ref2.parent) != null ? (_ref4 = _ref3.builder) != null ? _ref4.template : void 0 : void 0 : void 0)), "8true");
          return t.ready(function() {
            return æ.equal(_this.html(t.jquery), ["<footer></footer>"].join(""));
          });
        }, 8);
        setTimeout(function() {
          var t, _ref2, _ref3, _ref4;
          adds.should++;
          api.emit('footer', t = new Template({
            schema: 5
          }, function() {
            this.$p(function() {
              this.text("foo");
              this.$span("lol");
              return adds.should += 2;
            });
            return this.$p(function() {
              this.text("bar");
              this.$span("rofl");
              return adds.should += 2;
            });
          }));
          process.nextTick(function() {
            æ.equal(2, t.jquery.length);
            return æ.equal(0, t.jquery.filter('placeholder').length);
          });
          æ.equal("13" + (footer === ((_ref2 = t.xml) != null ? (_ref3 = _ref2.parent) != null ? (_ref4 = _ref3.builder) != null ? _ref4.template : void 0 : void 0 : void 0)), "13true");
          return t.ready(function() {
            return æ.equal(_this.html(t.jquery), ["<p></p>", "<p></p>"].join(""));
          });
        }, 13);
        setTimeout(function() {
          return æ.equal(adds.should, adds.real);
        }, 52);
        return this.results = ['<div class="content">', "<footer>", "<p>foo<span>lol</span></p>", "<p>bar<span>rofl</span></p>", "</footer>", "</div>"];
      }
    },
    replace: {
      setUp: function(callback) {
        var _this = this;
        this.api = new EventEmitter;
        this.results = "no results";
        setTimeout(function() {
          _this.æ.equal(_this.html(_this.tpl.jquery), _this.results.join(""));
          return _this.æ.done();
        }, 100);
        return callback();
      },
      instant: function(æ) {
        var $, api, tpl;
        var _this = this;
        this.æ = æ;
        $ = this.$, api = this.api;
        tpl = this.tpl = jqueryify({
          $: $
        }, new Template({
          schema: 5
        }, function() {
          return this.$div({
            "class": 'content'
          }, function() {
            return api.on('view', this.$p("bla").replace);
          });
        }));
        setTimeout(function() {
          var t, _ref, _ref2, _ref3;
          api.emit('view', t = new Template({
            schema: 5
          }, function() {
            return this.$p(function() {
              this.text("foo");
              return this.$b("bar");
            });
          }));
          process.nextTick(function() {
            æ.equal(1, t.jquery.length);
            return æ.equal(0, t.jquery.filter('placeholder').length);
          });
          æ.equal("3" + (tpl === ((_ref = t.xml) != null ? (_ref2 = _ref.parent) != null ? (_ref3 = _ref2.builder) != null ? _ref3.template : void 0 : void 0 : void 0)), "3true");
          return t.ready(function() {
            æ.equal("jqueryified:" + ((t.jquery != null) && 'yes' || 'no'), "jqueryified:yes");
            return æ.equal(_this.html(t.jquery), ["<p></p>"].join(""));
          });
        }, 3);
        return this.results = ['<div class="content">', "<p>foo<b>bar</b></p>", "</div>"];
      },
      'after end': function(æ) {
        var $, adds, api, next_step, p, replaces, tpl, _ref;
        var _this = this;
        this.æ = æ;
        $ = this.$, api = this.api;
        _ref = [
          null, {
            should: 0,
            real: 0
          }, {
            should: 0,
            real: 0
          }
        ], p = _ref[0], adds = _ref[1], replaces = _ref[2];
        tpl = this.tpl = jqueryify({
          $: $
        }, new Template({
          schema: 5
        }, function() {
          this.$div({
            "class": 'content'
          }, function() {
            p = this.$p("bla");
            api.on('view', p.replace);
            return p.ready(next_step);
          });
          return adds.should += 2;
        }));
        tpl.on('replace', function() {
          return replaces.real++;
        });
        tpl.on('add', function() {
          return adds.real++;
        });
        next_step = function() {
          æ.equal("closed:" + (p.closed && 'yes' || 'no'), "closed:yes");
          æ.equal(_this.html(tpl.jquery), ['<div class="content">', "<p>bla</p>", "</div>"].join(""));
          next_step.called = true;
          return setTimeout(function() {
            var t, _ref2, _ref3, _ref4;
            api.emit('view', t = new Template({
              schema: 5
            }, function() {
              replaces.should++;
              this.$p(function() {
                this.text("hack");
                return this.$b("hack");
              });
              return adds.should += 2;
            }));
            process.nextTick(function() {
              æ.equal(1, t.jquery.length);
              return æ.equal(0, t.jquery.filter('placeholder').length);
            });
            æ.equal("7" + (tpl === ((_ref2 = t.xml) != null ? (_ref3 = _ref2.parent) != null ? (_ref4 = _ref3.builder) != null ? _ref4.template : void 0 : void 0 : void 0)), "7true");
            return t.ready(function() {
              æ.equal("jqueryified:" + ((t.jquery != null) && 'yes' || 'no'), "jqueryified:yes");
              return æ.equal(_this.html(t.jquery), ["<p></p>"].join(""));
            });
          }, 7);
        };
        setTimeout(function() {
          æ.equal(adds.should, adds.real);
          æ.equal(replaces.should, replaces.real);
          return æ.equal("called:" + (next_step.called && 'yes' || 'no'), "called:yes");
        }, 52);
        return this.results = ['<div class="content">', "<p>hack<b>hack</b></p>", "</div>"];
      }
    }
  };

}).call(this);
